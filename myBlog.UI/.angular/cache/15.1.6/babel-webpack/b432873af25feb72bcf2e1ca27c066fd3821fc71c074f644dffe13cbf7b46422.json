{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SummaryPipe {\n  transform(content, limit) {\n    if (content.length <= limit) {\n      return content;\n    } else {\n      return '${content.substring(0.limit)...';\n    }\n  }\n}\nSummaryPipe.ɵfac = function SummaryPipe_Factory(t) {\n  return new (t || SummaryPipe)();\n};\nSummaryPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"summary\",\n  type: SummaryPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,WAAW;EAEtBC,SAAS,CAACC,OAAe,EAAEC,KAAY;IACtC,IAAGD,OAAO,CAACE,MAAM,IAAED,KAAK,EAAC;MACxB,OAAOD,OAAO;KACd,MACG;MACH,OAAO,iCAAiC;;EAE1C;;AATWF,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;;QAAXA,WAAW;EAAAK;AAAA","names":["SummaryPipe","transform","content","limit","length","pure"],"sourceRoot":"","sources":["C:\\Users\\ACER\\Desktop\\myBlog\\myBlog.UI\\src\\app\\pipes\\summary.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'summary'\n})\nexport class SummaryPipe implements PipeTransform {\n\n  transform(content: string, limit:number): string {\n   if(content.length<=limit){\n    return content;\n   }\n   else{\n    return '${content.substring(0.limit)...';\n   }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}